{"version":3,"sources":["webpack:///./src/components/goods/Params.vue?1fba","webpack:///src/components/goods/Params.vue","webpack:///./src/components/goods/Params.vue?adff","webpack:///./src/components/goods/Params.vue","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/components/goods/Cate.vue?ab6e","webpack:///src/components/goods/Cate.vue","webpack:///./src/components/goods/Cate.vue?1167","webpack:///./src/components/goods/Cate.vue","webpack:///./src/components/goods/Cate.vue?9fdf","webpack:///./src/components/goods/Params.vue?7e1d","webpack:///./node_modules/core-js/internals/string-trim-forced.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","path","_v","staticStyle","cateList","cateProps","on","handleChange","model","value","callback","$$v","selectedCateKeys","expression","handleTabClick","activeName","isBtnDisabled","$event","addDialogVisible","manyTableData","scopedSlots","_u","key","fn","scope","_l","row","item","i","handleClose","_s","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","$set","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","slot","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","staticRenderFns","name","data","label","children","expandTrigger","attr_name","attr_vals","inputVisible","inputValue","created","getCateList","computed","length","cateId","methods","getParamsData","$refs","addFormRef","resetFields","validate","editFormRef","$confirm","confirmButtonText","cancelButtonText","splice","$nextTick","component","$","$trim","trim","forcedStringTrimMethod","target","proto","forced","module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","showAddCateDialog","directives","rawName","columns","cat_deleted","cat_level","showEditCatDialog","cat_id","removeCate","queryInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","addCateForm","addCateRules","parentCateList","cascaderProps","parentCateChange","selectedKeys","addCate","editCateDialogVisible","editCateDialogClosed","editCateForm","editCateRules","editCate","cat_name","cat_pid","checkStrictly","required","pattern","message","trigger","loading","newSize","newPage","getParentCateList","addCateFormRef","editCateFormRef","fails","non","METHOD_NAME"],"mappings":"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","file":"js/Cate_Params.c08024a5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-main\"},[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品参数\")])],1),_c('el-scrollbar',{staticClass:\"content-scrollbar\",staticStyle:{\"height\":\"96%\"}},[_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许为第三级分类设置相关参数！ \",\"type\":\"warning\",\"closable\":false,\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.cateList,\"props\":_vm.cateProps,\"clearable\":\"\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ 添加新参数项\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id, scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":2.5}},[_c('div',{staticClass:\"onlyDiv\"},[_vm._v(\"属性内容：\")])]),_c('el-col',{attrs:{\"span\":12}},[_c('el-input',{staticClass:\"onlyInput\",attrs:{\"placeholder\":\"请输入内容\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.attr_vals),callback:function ($$v) {_vm.$set(scope.row, \"attr_vals\", $$v)},expression:\"scope.row.attr_vals\"}})],1)],1)]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id, scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"content-main\">\r\n    <!-- 面包屑导航区 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 滚动条区域 -->\r\n    <el-scrollbar style=\"height:96%\" class=\"content-scrollbar\">\r\n      <!-- 卡片视图区域 -->\r\n      <el-card>\r\n        <!-- 提示文字 alert -->\r\n        <el-alert\r\n          title=\"注意：只允许为第三级分类设置相关参数！ \"\r\n          type=\"warning\"\r\n          :closable=\"false\"\r\n          show-icon\r\n        >\r\n        </el-alert>\r\n        <!-- 选择商品分类 -->\r\n        <el-row class=\"cat_opt\">\r\n          <el-col>\r\n            <!-- label -->\r\n            <span>选择商品分类：</span>\r\n            <!-- 选择商品分类级联选择框 -->\r\n            <el-cascader\r\n              v-model=\"selectedCateKeys\"\r\n              :options=\"cateList\"\r\n              :props=\"cateProps\"\r\n              @change=\"handleChange\"\r\n              clearable\r\n            ></el-cascader>\r\n          </el-col>\r\n        </el-row>\r\n        <!-- tabs页签区 -->\r\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n          <!-- 添加动态参数的面板 -->\r\n          <el-tab-pane label=\"动态参数\" name=\"many\">\r\n            <!-- 添加动态参数按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              size=\"mini\"\r\n              :disabled=\"isBtnDisabled\"\r\n              @click=\"addDialogVisible = true\"\r\n              >添加参数</el-button\r\n            >\r\n            <!-- 动态参数表格 -->\r\n            <el-table :data=\"manyTableData\" border stripe>\r\n              <!-- 1 展开行 -->\r\n              <el-table-column type=\"expand\">\r\n                <template slot-scope=\"scope\">\r\n                  <!-- 循环渲染 tag 标签 -->\r\n                  <el-tag\r\n                    v-for=\"(item, i) in scope.row.attr_vals\"\r\n                    :key=\"i\"\r\n                    closable\r\n                    @close=\"handleClose(i, scope.row)\"\r\n                    >{{ item }}</el-tag\r\n                  >\r\n\r\n                  <!-- 添加参数按钮 -->\r\n                  <el-input\r\n                    class=\"input-new-tag\"\r\n                    v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\"\r\n                    ref=\"saveTagInput\"\r\n                    size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                    @blur=\"handleInputConfirm(scope.row)\"\r\n                  >\r\n                  </el-input>\r\n                  <!-- 添加按钮 -->\r\n                  <el-button\r\n                    v-else\r\n                    class=\"button-new-tag\"\r\n                    size=\"small\"\r\n                    @click=\"showInput(scope.row)\"\r\n                    >+ 添加新参数项</el-button\r\n                  >\r\n                </template>\r\n              </el-table-column>\r\n              <!-- 2 索引列 -->\r\n              <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n              <!-- 3 内容 -->\r\n              <el-table-column\r\n                label=\"参数名称\"\r\n                prop=\"attr_name\"\r\n              ></el-table-column>\r\n              <!-- 4 操作按钮 -->\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <!-- 修改按钮 -->\r\n                  <el-button\r\n                    size=\"mini\"\r\n                    type=\"primary\"\r\n                    icon=\"el-icon-edit\"\r\n                    @click=\"showEditDialog(scope.row.attr_id, scope.row)\"\r\n                    >编辑</el-button\r\n                  >\r\n                  <!-- 删除按钮 -->\r\n                  <el-button\r\n                    size=\"mini\"\r\n                    type=\"danger\"\r\n                    icon=\"el-icon-delete\"\r\n                    @click=\"removeParams(scope.row.attr_id)\"\r\n                    >删除</el-button\r\n                  >\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <!-- 添加静态属性的面板 -->\r\n          <el-tab-pane label=\"静态属性\" name=\"only\">\r\n            <el-button\r\n              type=\"primary\"\r\n              size=\"mini\"\r\n              :disabled=\"isBtnDisabled\"\r\n              @click=\"addDialogVisible = true\"\r\n              >添加属性</el-button\r\n            >\r\n            <!-- 静态属性表格 -->\r\n            <el-table :data=\"onlyTableData\" border stripe>\r\n              <!-- 展开行 -->\r\n              <el-table-column type=\"expand\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-row :gutter=\"0\">\r\n                    <el-col :span=\"2.5\">\r\n                      <div class=\"onlyDiv\">属性内容：</div>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                      <el-input\r\n                        placeholder=\"请输入内容\"\r\n                        v-model=\"scope.row.attr_vals\"\r\n                        class=\"onlyInput\"\r\n                        @blur=\"handleInputConfirm(scope.row)\"\r\n                      >\r\n                      </el-input>\r\n                    </el-col>\r\n                  </el-row>\r\n                  <!-- 循环渲染 tag 标签\r\n                  <el-tag\r\n                    v-for=\"(item, i) in scope.row.attr_vals\"\r\n                    :key=\"i\"\r\n                    closable\r\n                    @close=\"handleClose(i, scope.row)\"\r\n                    >{{ item }}</el-tag\r\n                  >\r\n                  输入文本框标签\r\n                  <el-input\r\n                    class=\"input-new-tag\"\r\n                    v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\"\r\n                    ref=\"saveTagInput\"\r\n                    size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                    @blur=\"handleInputConfirm(scope.row)\"\r\n                  >\r\n                  </el-input>\r\n                  添加按钮\r\n                  <el-button\r\n                    v-else\r\n                    class=\"button-new-tag\"\r\n                    size=\"small\"\r\n                    @click=\"showInput(scope.row)\"\r\n                    >+ 添加新参数项</el-button\r\n                  > -->\r\n                </template>\r\n              </el-table-column>\r\n              <!-- 索引列 -->\r\n              <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n              <!-- 内容 -->\r\n              <el-table-column\r\n                label=\"属性名称\"\r\n                prop=\"attr_name\"\r\n              ></el-table-column>\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    size=\"mini\"\r\n                    type=\"primary\"\r\n                    icon=\"el-icon-edit\"\r\n                    @click=\"showEditDialog(scope.row.attr_id, scope.row)\"\r\n                    >编辑</el-button\r\n                  >\r\n                  <el-button\r\n                    size=\"mini\"\r\n                    type=\"danger\"\r\n                    icon=\"el-icon-delete\"\r\n                    @click=\"removeParams(scope.row.attr_id)\"\r\n                    >删除</el-button\r\n                  >\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-card>\r\n    </el-scrollbar>\r\n    <!-- 这是添加动态参数/静态属性的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <!-- 表单区 -->\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部按钮区 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 修改参数对话框 -->\r\n    <el-dialog\r\n      :title=\"'修改' + titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <!-- 表单区 -->\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部按钮区 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'params',\r\n  data() {\r\n    return {\r\n      // 商品分类数据对象\r\n      cateList: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children',\r\n        // hover展开\r\n        expandTrigger: 'hover'\r\n      },\r\n      // 级联选择框双向绑定的数组\r\n      selectedCateKeys: [],\r\n      // 被激活的页签名称，默认启用动态参数\r\n      activeName: 'many',\r\n      // 动态参数数据\r\n      manyTableData: [],\r\n      // 静态属性数据\r\n      onlyTableData: [],\r\n      // 添加动态参数/静态属性对话框显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数的表单对象\r\n      addForm: {\r\n        attr_name: ''\r\n      },\r\n      // 添加参数的表单对象验证\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n          {\r\n            pattern: '[^ \\x22]+',\r\n            message: '不能为空格',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 修改对话框显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改表单数据对象\r\n      editForm: {\r\n        attr_name: '',\r\n        attr_id: 0,\r\n        attr_vals: ''\r\n      },\r\n      // 修改参数的表单对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n          {\r\n            pattern: '[^ \\x22]+',\r\n            message: '不能为空格',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 修改参数名对话框\r\n      inputVisible: false,\r\n      // 用于修改参数名\r\n      inputValue: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用则返回 true，否则为 false\r\n    isBtnDisabled() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    // 当前选中的3级分类id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 动态计算标题属性\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      }\r\n      return '静态属性'\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取所有商品列表分类数据;用于级联选择器\r\n    async getCateList() {\r\n      // 发起获取商品分类数据\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取商品分类失败！')\r\n      }\r\n      this.cateList = res.data\r\n\r\n      // 非三级禁止选择 disabled = true\r\n      for (let i = 0; i < this.cateList.length; i++) {\r\n        if (!this.cateList[i].children) {\r\n          this.cateList[i].disabled = true\r\n        } else {\r\n          for (let j = 0; j < this.cateList[i].children.length; j++) {\r\n            if (!this.cateList[i].children[j].children) {\r\n              this.cateList[i].children[j].disabled = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 级联选择框选中项变化触发\r\n    handleChange() {\r\n      // 获取参数列表\r\n      this.getParamsData()\r\n    },\r\n    // 获取参数列表数据\r\n    async getParamsData() {\r\n      // 选择不是3级分类则清空\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = []\r\n        // 对已渲染的数据进行清空\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return\r\n      }\r\n      // 根据所选分类id和所处的面板获取对应的参数\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes`,\r\n        {\r\n          // 请求类型，动态参数 or 静态属性\r\n          params: { sel: this.activeName }\r\n        }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数列表失败')\r\n      }\r\n      // 将 vals 从字符串分割成数组\r\n      // 给每个item创建inputVisible和inputValue属性，互不影响\r\n      if (this.activeName === 'many') {\r\n        res.data.forEach(item => {\r\n          // 判断是否为空字符串，避免空字符串也分割出一个数组`\r\n          item.attr_vals = item.attr_vals ? item.attr_vals.split(/\\s+/) : []\r\n\r\n          // 控制文本框的显示与隐藏，新添加一个属性\r\n          item.inputVisible = false\r\n          // 文本框中输入的值\r\n          item.inputValue = ''\r\n        })\r\n      } else {\r\n        res.data.forEach(item => {\r\n          // 判断是否为空字符串，避免空字符串也分割出一个数组`\r\n          // item.attr_vals = item.attr_vals ? item.attr_vals.split(/\\s+/) : []\r\n\r\n          // 控制文本框的显示与隐藏，新添加一个属性\r\n          item.inputVisible = false\r\n          // 文本框中输入的值\r\n          item.inputValue = ''\r\n        })\r\n      }\r\n\r\n      // 判断获取的是动态参数数据还是静态属性数据\r\n      if (this.activeName === 'many') {\r\n        this.manyTableData = res.data\r\n      } else {\r\n        this.onlyTableData = res.data\r\n      }\r\n    },\r\n    // 这是 tabs 页签点击的事件\r\n    handleTabClick() {\r\n      // 获取参数列表\r\n      this.getParamsData()\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击按钮，添加参数\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n\r\n        const { data: res } = await this.$http.post(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            attr_name: this.addForm.attr_name,\r\n            attr_sel: this.activeName\r\n          }\r\n        )\r\n\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加参数失败！')\r\n        }\r\n\r\n        this.$message.success('添加参数成功！')\r\n\r\n        this.addDialogVisible = false\r\n        // 刷新列表\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    // 点击按钮，展示修改对话框\r\n    async showEditDialog(attrId, row) {\r\n      /* 废弃之前写法\r\n       查询当前参数信息\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes/${attrId}`,\r\n        {\r\n          params: {\r\n            attr_sel: this.activeName\r\n          }\r\n        }\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数信息失败！')\r\n      }\r\n      // 将根据id查询到的值赋值到data\r\n      this.editForm = res.data\r\n      */\r\n      this.editForm.attr_name = row.attr_name\r\n      this.editForm.attr_id = row.attr_id\r\n      // 参数和属性保持不变\r\n      this.editForm.attr_vals = row.attr_vals\r\n      // 打开对话框\r\n      this.editDialogVisible = true\r\n    },\r\n    // 重置修改对话框表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改参数信息\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        // 验证通过发起请求\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          {\r\n            attr_name: this.editForm.attr_name,\r\n            attr_sel: this.activeName,\r\n            attr_vals:\r\n              this.activeName === 'only'\r\n                ? this.editForm.attr_vals\r\n                : this.editForm.attr_vals.join(' ')\r\n          }\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('修改参数失败！')\r\n        }\r\n        this.$message.success('修改参数成功！')\r\n        // 刷新列表\r\n        this.getParamsData()\r\n        // 隐藏对话框\r\n        this.editDialogVisible = false\r\n      })\r\n    },\r\n    // 根据 id 删除对应的动态参数\r\n    async removeParams(attrId) {\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该参数, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n\r\n      // 用户取消删除操作\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      }\r\n      // 删除逻辑\r\n      const { data: res } = await this.$http.delete(\r\n        `categories/${this.cateId}/attributes/${attrId}`\r\n      )\r\n\r\n      if (res.meta.status !== 200) return this.$message.error('删除参数失败！')\r\n\r\n      this.$message.success('删除参数成功！')\r\n      // 刷新列表\r\n      this.getParamsData()\r\n    },\r\n    // 将对attr_vals保存到数据库\r\n    async saveAttrVals(row) {\r\n      // 动态参数和静态参数共用这个方法\r\n      const { data: res } = await this.$http.put(\r\n        `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n        {\r\n          attr_name: row.attr_name,\r\n          attr_sel: row.attr_sel,\r\n          // 判断是动态则将数组拼接成字符串\r\n          attr_vals:\r\n            this.activeName === 'only' ? row.attr_vals : row.attr_vals.join(' ')\r\n        }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('修改参数项失败！')\r\n      }\r\n\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    // 添加参数项(文本框失去焦点或者按下 enter 触发)\r\n    async handleInputConfirm(row) {\r\n      // 针对静态属性项修改\r\n      if (this.activeName === 'only') {\r\n        this.saveAttrVals(row)\r\n        return\r\n      }\r\n      // 内容不允许是空字符串，空字符串则清空\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return，可以后续处理\r\n      row.attr_vals.push(row.inputValue)\r\n      row.inputValue = ''\r\n      // 编程提示\r\n      row.inputVisible = false\r\n      // 提交发起请求\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 删除参数项\r\n    handleClose(i, row) {\r\n      // 警告框\r\n      this.$confirm('确定删除该参数项?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 删除\r\n        row.attr_vals.splice(i, 1)\r\n        this.saveAttrVals(row)\r\n      })\r\n    },\r\n    // 点击按钮显示文本输入框\r\n    showInput(row) {\r\n      // 显示输入框\r\n      row.inputVisible = true\r\n      // 自动获取焦点\r\n      // vue在同步数据后不会立即渲染，渲染则像是异步操作，$nextTick也像是类型异步；等待渲染完成后执行代码\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.el-tag {\r\n  margin: 5px 10px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n.onlyDiv {\r\n  font-size: 16px;\r\n  line-height: 40px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=3ca05a88&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=3ca05a88&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3ca05a88\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")])],1)],1),_c('tree-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"treeTable\",attrs:{\"data\":_vm.cateList,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":\"\",\"index-text\":\"#\",\"border\":\"\",\"show-row-hover\":false,\"children-prop\":\"children\"},scopedSlots:_vm._u([{key:\"isOk\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success isOk\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error isOk\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"size\":\"mini\",\"type\":\"success\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"size\":\"mini\",\"type\":\"warning\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditCatDialog(scope.row.cat_id, scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeCate(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, 10],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类：\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"placeholder\":\"可选择 1级 或 2级 做父级分类，不选则为创建1级分类\",\"clearable\":\"\"},on:{\"change\":_vm.parentCateChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑分类名称\",\"width\":\"50%\",\"visible\":_vm.editCateDialogVisible},on:{\"update:visible\":function($event){_vm.editCateDialogVisible=$event},\"close\":_vm.editCateDialogClosed}},[_c('el-form',{ref:\"editCateFormRef\",attrs:{\"model\":_vm.editCateForm,\"rules\":_vm.editCateRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.editCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.editCateForm, \"cat_name\", $$v)},expression:\"editCateForm.cat_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editCate}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 添加分类 -->\r\n      <el-row>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\"\r\n            >添加分类</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格占位 vue-table-tree -->\r\n      <tree-table\r\n        class=\"treeTable\"\r\n        :data=\"cateList\"\r\n        :columns=\"columns\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index\r\n        index-text=\"#\"\r\n        border\r\n        :show-row-hover=\"false\"\r\n        children-prop=\"children\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- 自定义模板列  -->\r\n        <!-- 是否有效列 slot为废弃语法 -->\r\n        <template slot=\"isOk\" slot-scope=\"scope\">\r\n          <!-- icon 图标  -->\r\n          <!-- false为没有废除 -->\r\n          <i\r\n            class=\"el-icon-success isOk\"\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            style=\"color:lightgreen\"\r\n          ></i>\r\n          <i class=\"el-icon-error isOk\" v-else style=\"color:red\"></i>\r\n        </template>\r\n        <!-- 排序列 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag\r\n            size=\"mini\"\r\n            type=\"success\"\r\n            v-else-if=\"scope.row.cat_level === 1\"\r\n            >二级</el-tag\r\n          >\r\n          <el-tag size=\"mini\" type=\"warning\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作列 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <!-- 编辑按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"showEditCatDialog(scope.row.cat_id, scope.row)\"\r\n            >编辑</el-button\r\n          >\r\n          <!-- 删除按钮 -->\r\n          <el-button\r\n            type=\"danger\"\r\n            size=\"mini\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"removeCate(scope.row.cat_id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页列表页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateDialogClosed\"\r\n    >\r\n      <!-- 添加分类表单 -->\r\n      <el-form\r\n        :model=\"addCateForm\"\r\n        :rules=\"addCateRules\"\r\n        ref=\"addCateFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <!-- 分类名称 -->\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <!-- 父级分类 -->\r\n        <el-form-item label=\"父级分类：\">\r\n          <!-- 级联选择器 options用来绑定数据源 props用来指定配置对象 -->\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"parentCateList\"\r\n            :props=\"cascaderProps\"\r\n            @change=\"parentCateChange\"\r\n            placeholder=\"可选择 1级 或 2级 做父级分类，不选则为创建1级分类\"\r\n            clearable\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部按钮区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 编辑分类对话框 -->\r\n    <el-dialog\r\n      title=\"编辑分类名称\"\r\n      width=\"50%\"\r\n      :visible.sync=\"editCateDialogVisible\"\r\n      @close=\"editCateDialogClosed\"\r\n    >\r\n      <!-- 表单 -->\r\n      <el-form\r\n        :model=\"editCateForm\"\r\n        :rules=\"editCateRules\"\r\n        ref=\"editCateFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 底部按钮区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'cate',\r\n  data() {\r\n    return {\r\n      // 分页配置\r\n      queryInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5\r\n      },\r\n      // 商品分类数据，默认为空\r\n      cateList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // table-three 配置\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name'\r\n        },\r\n        {\r\n          label: '是否有效',\r\n          // 表示将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这列使用的名称\r\n          template: 'isOk'\r\n        },\r\n        {\r\n          label: '排序',\r\n          // 表示将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这列使用的名称\r\n          template: 'order'\r\n        },\r\n        {\r\n          label: '操作',\r\n          // 表示将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这列使用的名称\r\n          template: 'opt'\r\n        }\r\n      ],\r\n      // 添加分类对话框的显示与隐藏\r\n      addCateDialogVisible: false,\r\n      // 添加分类表单数据对象\r\n      addCateForm: {\r\n        // 将要添加分类的名称\r\n        cat_name: '',\r\n        // 父级分类的 id\r\n        cat_pid: 0,\r\n        // 分类的等级，默认要添加的是 1 级分类\r\n        cat_level: 0\r\n      },\r\n      // 添加分类表单验证\r\n      addCateRules: {\r\n        cat_name: [\r\n          {\r\n            required: true,\r\n            pattern: '[^ \\x22]+',\r\n            message: '不能为空',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps: {\r\n        // 展开方式\r\n        expandTrigger: 'hover',\r\n        // 可以选择任意级联项\r\n        checkStrictly: true,\r\n        // 显示值\r\n        label: 'cat_name',\r\n        // 绑定值\r\n        value: 'cat_id',\r\n        children: 'children'\r\n      },\r\n      // 级联选择器选中父级分类的 id 数组\r\n      selectedKeys: [],\r\n      // 编辑分类对话框显示与隐藏\r\n      editCateDialogVisible: false,\r\n      // 编辑分类数据绑定表单\r\n      editCateForm: {\r\n        cat_name: '',\r\n        cat_id: 0\r\n      },\r\n      // 编辑分类表单数据验证\r\n      editCateRules: {\r\n        cat_name: {\r\n          required: true,\r\n          pattern: '[^ \\x22]+',\r\n          message: '不能为空',\r\n          trigger: 'blur'\r\n        }\r\n      },\r\n      // 表格树加载遮罩\r\n      loading: true\r\n    }\r\n  },\r\n  // watch: {\r\n  //   addCateForm: {\r\n  //     handler(newValue, oldValue) {\r\n  //       newValue.cat_name = newValue.cat_name.trim()\r\n  //     },\r\n  //     deep: true\r\n  //   }\r\n  // },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据\r\n    async getCateList() {\r\n      //    发起获取商品分类数据\r\n      const { data: res } = await this.$http.get('categories', {\r\n        params: this.queryInfo\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        this.loading = false\r\n        return this.$message.error('获取商品分类失败！')\r\n      }\r\n      // 把数据列表复制到 data 里面\r\n      this.cateList = res.data.result\r\n      // 数据总条数复制到 data\r\n      this.total = res.data.total\r\n      this.loading = false\r\n    },\r\n    // 监听 pagesize 改变事件\r\n    handleSizeChange(newSize) {\r\n      this.loading = true\r\n      this.queryInfo.pagesize = newSize\r\n      this.getCateList()\r\n    },\r\n    // 监听 pagenum 的改变\r\n    handleCurrentChange(newPage) {\r\n      this.loading = true\r\n      this.queryInfo.pagenum = newPage\r\n      this.getCateList()\r\n    },\r\n    // 点击按钮展示添加分类对话框\r\n    showAddCateDialog() {\r\n      // 先获取父级分类数据\r\n      this.getParentCateList()\r\n      this.addCateDialogVisible = true\r\n    },\r\n    // 获取父级分类数据的列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get('categories', {\r\n        // 分类总共只有三级\r\n        params: { type: 2 }\r\n      })\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取父级分类数据失败！')\r\n      }\r\n\r\n      this.parentCateList = res.data\r\n    },\r\n    // 级联选择器方式变化时触发\r\n    parentCateChange() {\r\n      // 无选中父级分类时则是一级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类的 id 取等级最低那一位\r\n        this.addCateForm.cat_pid = this.selectedKeys[\r\n          this.selectedKeys.length - 1\r\n        ]\r\n        // 为当前分类等级赋值，等级刚好为数组length\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n      } else {\r\n        // 父级分类的 id\r\n        this.addCateForm.cat_pid = 0\r\n        // 为当前分类等级赋值\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n    // 点击按钮添加新的分类\r\n    addCate() {\r\n      // 验证并发送请求\r\n      this.$refs.addCateFormRef.validate(async valid => {\r\n        if (!valid) return\r\n\r\n        const { data: res } = await this.$http.post(\r\n          'categories',\r\n          this.addCateForm\r\n        )\r\n\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加分类失败！')\r\n        }\r\n\r\n        this.$message.success('添加分类成功！')\r\n        // 刷新数据列表\r\n        this.getCateList()\r\n        // 隐藏对话框\r\n        this.addCateDialogVisible = false\r\n      })\r\n    },\r\n    // 添加分类对话框关闭事件，关闭清空表单\r\n    addCateDialogClosed() {\r\n      // 重置验证表单\r\n      this.$refs.addCateFormRef.resetFields()\r\n      // 重置选中的父级分类对象\r\n      this.selectedKeys = []\r\n      // 重置 pid 和 level\r\n      this.addCateForm.cat_level = 0\r\n      this.addCateForm.cat_pid = 0\r\n    },\r\n    // 打开编辑分类对话框\r\n    async showEditCatDialog(id, row) {\r\n      this.editCateDialogVisible = true\r\n      // // 根据 id 查询分类\r\n\r\n      // const { data: res } = await this.$http.get('categories/' + id)\r\n\r\n      // if (res.meta.status !== 200) return this.$message.error('查询分类失败！')\r\n\r\n      // this.editCateForm = res.data\r\n\r\n      this.editCateForm.cat_name = row.cat_name\r\n      this.editCateForm.cat_id = row.cat_id\r\n    },\r\n    // 关闭编辑分类对话框清空验证\r\n    editCateDialogClosed() {\r\n      this.$refs.editCateFormRef.resetFields()\r\n      this.editCateForm.cat_name = ''\r\n      this.editCateForm.cat_id = 0\r\n    },\r\n    // 编辑分类名称\r\n    editCate() {\r\n      this.$refs.editCateFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        // 发起请求\r\n        const { data: res } = await this.$http.put(\r\n          'categories/' + this.editCateForm.cat_id,\r\n          {\r\n            // 携带分类名称\r\n            cat_name: this.editCateForm.cat_name\r\n          }\r\n        )\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('更新分类失败！')\r\n        }\r\n\r\n        this.$message.success('更新分类成功！')\r\n\r\n        // 关闭对话框\r\n        this.editCateDialogVisible = false\r\n        // 刷新列表\r\n        this.getCateList()\r\n      })\r\n    },\r\n    // 删除分类\r\n    async removeCate(id) {\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该分类, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      }\r\n\r\n      const { data: res } = await this.$http.delete('categories/' + id)\r\n      if (res.meta.status !== 200) return this.$message.error('删除失败！')\r\n\r\n      this.$message.success('删除成功！')\r\n\r\n      this.getCateList()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.treeTable {\r\n  margin-top: 15px;\r\n}\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n// icon 大小\r\n.isOk {\r\n  font-size: 18px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=4966dff5&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=4966dff5&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4966dff5\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=style&index=0&id=4966dff5&lang=less&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Params.vue?vue&type=style&index=0&id=3ca05a88&lang=less&scoped=true&\"","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n"],"sourceRoot":""}