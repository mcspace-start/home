{"version":3,"file":"js/576.0b870519.js","mappings":"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","sources":["webpack://fgmusic/./src/components/SongsListTable.vue","webpack://fgmusic/src/components/SongsListTable.vue","webpack://fgmusic/./src/components/SongsListTable.vue?fb79","webpack://fgmusic/./src/components/SongsListTable.vue?d25e","webpack://fgmusic/./src/views/Ranking.vue","webpack://fgmusic/src/views/Ranking.vue","webpack://fgmusic/./src/views/Ranking.vue?c5bb","webpack://fgmusic/./src/views/Ranking.vue?5726"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"songsListTableMain\",staticClass:\"main_wrap\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"content\",staticClass:\"content\",attrs:{\"element-loading-background\":\"var(--loading-bg-color)\"}},[(_vm.showRetry)?_c('retry',{on:{\"retry\":_vm.getData}}):_vm._e(),(!_vm.showRetry && !_vm.showEmpty)?_c('el-scrollbar',{staticStyle:{\"height\":\"100%\"},attrs:{\"wrap-style\":\"overflow-x: hidden;\"}},[_c('div',{directives:[{name:\"infinite-scroll\",rawName:\"v-infinite-scroll\",value:(_vm.getData),expression:\"getData\"}],staticClass:\"content_i\",attrs:{\"infinite-scroll-immediate\":\"false\",\"infinite-scroll-disabled\":\"infiniteDisabled\"}},_vm._l((_vm.songsListData),function(item,index){return _c('div',{key:item.id,staticClass:\"table_item\",class:{ act: item.id == _vm.active },on:{\"click\":function($event){_vm.active = item.id},\"dblclick\":function($event){return _vm.playSpecificSong(item)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.point),expression:\"!visAreas.point\"}],staticClass:\"point\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.index),expression:\"!visAreas.index\"}],staticClass:\"index\"},[_vm._v(_vm._s(index + 1))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.song_name),expression:\"!visAreas.song_name\"}],staticClass:\"song_name\",attrs:{\"title\":item.songName}},[_vm._v(\" \"+_vm._s(item.songName)+\" \")]),_c('div',{staticClass:\"version\"},[(item.fee == 1)?_c('span',[_vm._v(\" 试听 \")]):_vm._e()]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.col),expression:\"!visAreas.col\"}],staticClass:\"col\",on:{\"click\":function($event){return _vm.toggleCol(item)}}},[_c('div',{staticClass:\"i_wrapper\"},[_c('i',{staticClass:\"iconfont\",class:{\n                  'icon-xihuan1': !item.isCol,\n                  'icon-xihuan2': item.isCol,\n                }})])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.download),expression:\"!visAreas.download\"}],staticClass:\"download\",on:{\"click\":function($event){return _vm.download(item)}}},[_c('div',{staticClass:\"i_wrapper\"},[_c('i',{staticClass:\"iconfont icon-arrow-down-line\"})])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.artist),expression:\"!visAreas.artist\"}],staticClass:\"artist\",attrs:{\"title\":item.arName}},[_vm._v(\" \"+_vm._s(item.arName)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.albumName),expression:\"!visAreas.albumName\"}],staticClass:\"albumName\",attrs:{\"title\":item.albumName}},[_vm._v(\" \"+_vm._s(item.album)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.duration),expression:\"!visAreas.duration\"}],staticClass:\"duration\"},[_vm._v(\" \"+_vm._s(_vm.formatTime(item.dt))+\" \")])])}),0)]):_vm._e(),(_vm.showEmpty && !_vm.showRetry && !_vm.loading)?_c('div',{staticClass:\"empty\"},[_c('div',{staticClass:\"empty_i\"},[_vm._v(\"没有数据\")])]):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"main_wrap\" ref=\"songsListTableMain\">\r\n    <div\r\n      class=\"content\"\r\n      ref=\"content\"\r\n      v-loading=\"loading\"\r\n      element-loading-background=\"var(--loading-bg-color)\"\r\n    >\r\n      <!-- 重试 -->\r\n      <retry @retry=\"getData\" v-if=\"showRetry\"></retry>\r\n      <!-- 内容 -->\r\n      <el-scrollbar\r\n        v-if=\"!showRetry && !showEmpty\"\r\n        style=\"height: 100%\"\r\n        wrap-style=\"overflow-x: hidden;\"\r\n      >\r\n        <div\r\n          class=\"content_i\"\r\n          infinite-scroll-immediate=\"false\"\r\n          v-infinite-scroll=\"getData\"\r\n          infinite-scroll-disabled=\"infiniteDisabled\"\r\n        >\r\n          <div\r\n            class=\"table_item\"\r\n            @click=\"active = item.id\"\r\n            v-for=\"(item, index) in songsListData\"\r\n            @dblclick=\"playSpecificSong(item)\"\r\n            :key=\"item.id\"\r\n            :class=\"{ act: item.id == active }\"\r\n          >\r\n            <div class=\"point\" v-show=\"!visAreas.point\"></div>\r\n            <div class=\"index\" v-show=\"!visAreas.index\">{{ index + 1 }}</div>\r\n            <div\r\n              class=\"song_name\"\r\n              :title=\"item.songName\"\r\n              v-show=\"!visAreas.song_name\"\r\n            >\r\n              {{ item.songName }}\r\n            </div>\r\n            <div class=\"version\">\r\n              <span v-if=\"item.fee == 1\"> 试听 </span>\r\n            </div>\r\n            <div class=\"col\" v-show=\"!visAreas.col\" @click=\"toggleCol(item)\">\r\n              <div class=\"i_wrapper\">\r\n                <i\r\n                  class=\"iconfont\"\r\n                  :class=\"{\r\n                    'icon-xihuan1': !item.isCol,\r\n                    'icon-xihuan2': item.isCol,\r\n                  }\"\r\n                ></i>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"download\"\r\n              v-show=\"!visAreas.download\"\r\n              @click=\"download(item)\"\r\n            >\r\n              <div class=\"i_wrapper\">\r\n                <i class=\"iconfont icon-arrow-down-line\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"artist\" v-show=\"!visAreas.artist\" :title=\"item.arName\">\r\n              {{ item.arName }}\r\n            </div>\r\n            <div\r\n              class=\"albumName\"\r\n              v-show=\"!visAreas.albumName\"\r\n              :title=\"item.albumName\"\r\n            >\r\n              {{ item.album }}\r\n            </div>\r\n            <div class=\"duration\" v-show=\"!visAreas.duration\">\r\n              {{ formatTime(item.dt) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-scrollbar>\r\n      <!-- 无数据 -->\r\n      <div class=\"empty\" v-if=\"showEmpty && !showRetry && !loading\">\r\n        <div class=\"empty_i\">没有数据</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"SongsListTable\",\r\n  props: {\r\n    // 接受隐藏项\r\n    visAreas: {\r\n      type: Object,\r\n      default: () => ({\r\n        // point: false,\r\n        // index: false,\r\n        // song_name: false,\r\n        // col: false,\r\n        // download: false,\r\n        // artist: false,\r\n        // albumName: false,\r\n        // duration: false,\r\n      }),\r\n    },\r\n    // 接受参数项\r\n    opts: {\r\n      type: Object,\r\n      default: () => ({\r\n        id: 0,\r\n        type: \"\",\r\n        keywords: \"\",\r\n        // type:toplist || col || search\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      songsListData: [], // 歌曲内容\r\n      active: 0, //选中高亮\r\n      loading: false,\r\n      showRetry: false,\r\n      showEmpty: false,\r\n      infiniteDisabled: false, //无限滚动\r\n      limit: 30,\r\n      offset: 0,\r\n      keywords: \"\",\r\n      lastLoadCount: 0, // 用于跳过已经请求过的资源\r\n    };\r\n  },\r\n  watch: {\r\n    opts: {\r\n      handler(value) {\r\n        this.songsListData = [];\r\n        this.getData();\r\n        this.keywords = value.keywords;\r\n        this.lastLoadCount = 0;\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"playQueue\", \"downloadList\", \"settings\", \"selectedTrackId\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      \"pushToPlaylist\",\r\n      \"updateCurrentTrack\",\r\n      \"addToDownloadList\",\r\n    ]),\r\n    // 格式化时长 HH:mm:ss\r\n    formatTime(duration) {\r\n      const hours = Math.floor(duration / 3600000);\r\n      const minutes = Math.floor((duration % 3600000) / 60000);\r\n      const seconds = Math.floor((duration % 60000) / 1000);\r\n      return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(\r\n        2,\r\n        \"0\"\r\n      )}:${String(seconds).padStart(2, \"0\")}`;\r\n    },\r\n    // 拼接歌手名称\r\n    arNameFormatted(nameList) {\r\n      let str = \"\";\r\n      const nameArr = nameList.map((item) => {\r\n        return item.name;\r\n      });\r\n      if (nameArr.length > 3) {\r\n        str = \"群星\";\r\n      } else {\r\n        str = nameArr.join(\" & \");\r\n      }\r\n      return str;\r\n    },\r\n    // 获取数据\r\n    async getData() {\r\n      this.loading = true;\r\n      this.showEmpty = false;\r\n      this.showRetry = false;\r\n\r\n      const opts = this.opts;\r\n      try {\r\n        switch (opts.type) {\r\n          case \"col\":\r\n            this.infiniteDisabled = true;\r\n            this.getShowColData();\r\n            break;\r\n          case \"toplist\":\r\n            this.infiniteDisabled = true;\r\n            await this.getToplistData(opts.id);\r\n            break;\r\n          case \"search\":\r\n            if (opts.keywords) {\r\n              await this.getSearchData(opts.keywords);\r\n            }\r\n            break;\r\n          default: {\r\n            this.$message.error(\"传入参数错误！\");\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.showRetry = true;\r\n        this.$message.error(\"获取榜单数据失败！\");\r\n      }\r\n      this.loading = false;\r\n      if (!this.songsListData.length) this.showEmpty = true;\r\n    },\r\n    // 发起请求\r\n    async getToplistData(toplistId) {\r\n      if (toplistId == 0) return;\r\n      console.log(\"获取排行榜数据\");\r\n      // 19723756\r\n      // 此处获取歌单详情\r\n      const { data: playlistData } = await this.$http.get(\"/playlist/detail\", {\r\n        params: {\r\n          id: toplistId,\r\n        },\r\n      });\r\n      // 拼接 id\r\n      const trackIds = playlistData.playlist.trackIds.map((item) => item.id);\r\n      // 获取音乐详情\r\n      const { data: songsList } = await this.$http.get(\"song/detail\", {\r\n        params: {\r\n          ids: trackIds.join(\",\"),\r\n        },\r\n      });\r\n      // 格式化数据并添加至songsListData\r\n      let songsListData_temp = songsList.songs.map((item) => {\r\n        return {\r\n          id: item.id,\r\n          picUrl: item.al.picUrl,\r\n          songName: item.name,\r\n          arName: this.arNameFormatted(item.ar),\r\n          album: item.al.name,\r\n          dt: item.dt,\r\n          isPlayable: true,\r\n          isCol: this.checkIsCol(item), // 判断本地存储是否存在\r\n          fee: item.fee,\r\n        };\r\n      });\r\n      // 忽略试听歌曲\r\n      if (this.settings?.playSettings?.ignorePreviewTracks) {\r\n        songsListData_temp = songsListData_temp.filter(\r\n          (item) => item.fee !== 1\r\n        );\r\n      }\r\n      this.songsListData = songsListData_temp;\r\n    },\r\n    // 获取搜索数据\r\n    async getSearchData(keywords) {\r\n      if (keywords.trim() == \"\") return;\r\n      console.log(\"搜索歌曲\");\r\n      if (this.keywords !== keywords) {\r\n        this.songsListData = [];\r\n        this.offset = 0;\r\n      }\r\n      const url = \"/cloudsearch\";\r\n      const params = {\r\n        limit: this.limit,\r\n        offset: this.offset,\r\n        type: 1, // 1 单曲 10 专辑 100 歌手 1000 歌单 1002用户 1004 mv 1006 歌词 1014视频 1018综合 2000 声音\r\n        keywords: keywords,\r\n      };\r\n      let { data } = await this.$http.get(url, { params });\r\n      data = data.result.songs || [];\r\n      // 格式化数据\r\n      let songsListData_temp = data.map((item) => {\r\n        return {\r\n          id: item.id,\r\n          picUrl: item.al.picUrl,\r\n          songName: item.name,\r\n          arName: this.arNameFormatted(item.ar),\r\n          album: item.al.name,\r\n          dt: item.dt,\r\n          isPlayable: true, // 默认播放源正常\r\n          isCol: this.checkIsCol(item), // 判断是否为喜欢\r\n          fee: item.fee,\r\n        };\r\n      });\r\n      // 排除重复值\r\n      let uniqueItems = this.filterUniqueItems(\r\n        this.songsListData,\r\n        songsListData_temp\r\n      );\r\n      // 关闭无限滚动\r\n      if (!uniqueItems.length) {\r\n        this.infiniteDisabled = true;\r\n      }\r\n      this.offset += this.limit;\r\n      // 忽略试听歌曲\r\n      if (this.settings?.playSettings?.ignorePreviewTracks) {\r\n        // 去除试听歌曲\r\n        uniqueItems = uniqueItems.filter((item) => item.fee !== 1);\r\n        this.songsListData.push(...uniqueItems);\r\n        // 去除试听歌曲后 uniqueItems 数组为空且 infiniteDisabled 为 false\r\n        if (!uniqueItems.length && !this.infiniteDisabled) {\r\n          this.getData();\r\n        }\r\n      } else {\r\n        this.songsListData.push(...uniqueItems);\r\n      }\r\n    },\r\n    // 展示收藏数据\r\n    getShowColData() {\r\n      console.log(\"展示收藏数据\");\r\n      const myCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      const songs = myCol.songs || [];\r\n      this.songsListData = songs;\r\n    },\r\n    // 下载\r\n    async download(item) {\r\n      console.log(\"尝试下载\");\r\n      // 获取 url\r\n      await this.checkPlayable([item]);\r\n      if (!item.url) return this.$message.error(\"URL为空\");\r\n      // 传入参数 用于添加下载列表\r\n      const obj = {\r\n        name: item.songName,\r\n        id: item.id,\r\n        url: item.url,\r\n      };\r\n      // confirm 信息\r\n      let msg = \"是否下载？\"; // 提示信息\r\n      // 执行方法\r\n      let handleConfirm = () => {\r\n        this.addToDownloadList(obj);\r\n        this.$message.success(\"添加至下载列表！\");\r\n      };\r\n      // 是否为试听版\r\n      if (item.freeTrialInfo.end) {\r\n        const time = item.freeTrialInfo.end - item.freeTrialInfo.start;\r\n        msg = \"该歌曲为试听版，是否继续下载？时长\" + time + \"秒\";\r\n      }\r\n      // 判断是否存在下载列表\r\n      const isUnique = this.downloadList.findIndex((i) => i.id == item.id);\r\n      if (isUnique !== -1) {\r\n        msg = \"下载列表已经存在，是否重复下载\";\r\n      }\r\n      // 弹出提示框\r\n      this.$confirm(msg, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n        customClass: \"messageBox\",\r\n      })\r\n        .then(handleConfirm)\r\n        .catch(() => {});\r\n    },\r\n    // 播放指定歌曲\r\n    async playSpecificSong(item) {\r\n      try {\r\n        await this.checkPlayable(this.songsListData);\r\n      } catch (err) {\r\n        return this.$message.error(\"获取歌曲详情失败！\");\r\n      }\r\n      if (!item.isPlayable) return this.$message.error(\"无法播放！\");\r\n      // 判断是否需要更新播放列表\r\n      const isChangePlayQueue = this.eqArr(this.songsListData, this.playQueue);\r\n      if (!isChangePlayQueue) {\r\n        this.pushToPlaylist([...this.songsListData]);\r\n      }\r\n      // console.log(` 当前播放${item.id},正在播放${this.selectedTrackId}`);\r\n      // 是否重新播放当前这首\r\n      if (item.id == this.selectedTrackId) {\r\n        this.updateCurrentTrack(-2); // 传入-2\r\n      } else {\r\n        // 写入播放索引\r\n        this.updateCurrentTrack(item.id);\r\n      }\r\n    },\r\n    // 查询播放源 会对原数组修改\r\n    async checkPlayable(arr) {\r\n      console.log(\"查询播放源\");\r\n      // 跳过之前\r\n      let arrTemp = [];\r\n      // 无需通过网络请求片段不会设置 lastLoadCount\r\n      if (this.lastLoadCount) {\r\n        // 只需要最后添加的片段\r\n        arrTemp = arr.slice(this.lastLoadCount);\r\n        arr = arrTemp;\r\n      }\r\n      const ids = arr.map((i) => i.id).join(\",\");\r\n      const url = \"/song/url\";\r\n      let { data } = await this.$http.get(url, {\r\n        params: {\r\n          id: ids,\r\n        },\r\n      });\r\n      data = data.data;\r\n      arr.forEach((itemA) => {\r\n        const itemB = data.find((itemB) => itemA.id == itemB.id);\r\n        // 对原数组进行修改\r\n        itemA.url = itemB.url;\r\n        itemA.freeTrialInfo = itemB.freeTrialInfo || {}; //试听信息\r\n        if (!itemA.url) itemA.isPlayable = false;\r\n      });\r\n      // 保存当前已加载的下标\r\n      this.lastLoadCount += arr.length;\r\n    },\r\n    // 判断是否为本地收藏\r\n    checkIsCol(item) {\r\n      let myCol = localStorage.getItem(\"myCol\");\r\n      if (!myCol) return false;\r\n\r\n      myCol = JSON.parse(myCol);\r\n      return myCol.songs ? myCol.songs.some((i) => i.id === item.id) : false;\r\n    },\r\n    // 收藏歌曲\r\n    toggleCol(item) {\r\n      // songs\r\n      console.log(\"切换喜欢\");\r\n      let localMyCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      if (!localMyCol.songs) {\r\n        localMyCol.songs = [];\r\n      }\r\n      const index = localMyCol.songs.findIndex((i) => i.id == item.id);\r\n      if (item.isCol) {\r\n        localMyCol.songs.splice(index, 1);\r\n        item.isCol = false;\r\n        this.$message.success(\"取消收藏成功！\");\r\n      } else {\r\n        localMyCol.songs.push(item);\r\n        item.isCol = true;\r\n        this.$message.success(\"添加收藏成功！\");\r\n      }\r\n      localStorage.setItem(\"myCol\", JSON.stringify(localMyCol));\r\n    },\r\n    // 判断数组是否相同 浅层\r\n    eqArr(a, b) {\r\n      return a.length === b.length && a.every((item, i) => item.id === b[i].id);\r\n    },\r\n    // 过滤重复项\r\n    filterUniqueItems(existingItems, allItems) {\r\n      // 从 allItems 中筛选出那些在 existingItems 中不存在的项\r\n      const uniqueItems = allItems.filter((item) => {\r\n        return !existingItems.some(\r\n          (existingItem) => existingItem.id === item.id\r\n        );\r\n      });\r\n      return uniqueItems;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.main_wrap {\r\n  height: 100%;\r\n  position: relative;\r\n  .content {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .table_item {\r\n      height: 44px;\r\n      margin-bottom: 7px;\r\n      display: flex;\r\n      font-size: 14px;\r\n      align-items: center;\r\n      padding-left: 16px;\r\n      font-weight: bold;\r\n      color: var(--secondary-text-color);\r\n      border-radius: 12px;\r\n      & > div {\r\n        flex: 1;\r\n        margin-right: 5px;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n      }\r\n      &:hover {\r\n        background: var(--secondary-bg-color);\r\n        color: var(--text-hover-color);\r\n      }\r\n      &.act {\r\n        background: var(--secondary-bg-color);\r\n        color: var(--primary-text-color);\r\n      }\r\n      .point {\r\n        flex: 0 0 10px;\r\n        margin-right: 16px;\r\n        width: 10px;\r\n        height: 10px;\r\n        border-radius: 50%;\r\n        background-color: var(--primar-color);\r\n      }\r\n      .index {\r\n        width: 46px;\r\n        flex: 0 0 46px;\r\n      }\r\n      // 歌曲名称\r\n      .song_name {\r\n        flex: 1;\r\n      }\r\n      .version {\r\n        flex: 0 0 50px;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        & > span {\r\n          color: #fe7360;\r\n          border: 1px solid #fe7360;\r\n          box-sizing: border-box;\r\n          font-size: 10px;\r\n          padding: 2px;\r\n        }\r\n      }\r\n      // 下载和喜欢\r\n      .col,\r\n      .download {\r\n        cursor: pointer;\r\n        width: 34px;\r\n        flex: 0 0 34px;\r\n        font-weight: normal;\r\n        margin-right: 0;\r\n        .iconfont {\r\n          font-size: 12px;\r\n        }\r\n        .icon-xihuan2 {\r\n          color: #e01e1e;\r\n        }\r\n        .i_wrapper {\r\n          width: 25px;\r\n          height: 25px;\r\n          text-align: center;\r\n          line-height: 25px;\r\n          border-radius: 8px;\r\n          transition: background var(--transition-duration);\r\n          &:hover {\r\n            background: var(--primary-button-hover-color);\r\n          }\r\n        }\r\n      }\r\n      // 作者\r\n      .artist {\r\n        width: 220px;\r\n      }\r\n      // 专辑\r\n      .albumName {\r\n        width: 340px;\r\n      }\r\n      // 时长\r\n      .duration {\r\n        width: 110px;\r\n      }\r\n    }\r\n    // 无数据\r\n    .empty {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      & > .empty_i {\r\n        width: 134px;\r\n        height: 42px;\r\n        background-color: var(--nav-bg-color);\r\n        color: var(--secondary-text-color);\r\n        border-radius: 12px;\r\n        line-height: 42px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SongsListTable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SongsListTable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SongsListTable.vue?vue&type=template&id=4a2fc9ff&scoped=true\"\nimport script from \"./SongsListTable.vue?vue&type=script&lang=js\"\nexport * from \"./SongsListTable.vue?vue&type=script&lang=js\"\nimport style0 from \"./SongsListTable.vue?vue&type=style&index=0&id=4a2fc9ff&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a2fc9ff\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"ranking_main\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"menu_wrapper\"},[_c('el-menu',{staticClass:\"el-menu-vertical-demo\",attrs:{\"default-active\":_vm.active,\"mode\":\"horizontal\"},on:{\"select\":_vm.toggleRanking}},_vm._l((_vm.navData),function(item){return _c('el-menu-item',{key:item.id,attrs:{\"index\":item.id + ''}},[_vm._v(_vm._s(item.title))])}),1)],1)]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"content\",attrs:{\"element-loading-background\":\"var(--loading-bg-color)\"}},[(_vm.showRetry)?_c('retry',{on:{\"retry\":_vm.getData}}):_vm._e(),(_vm.showContent)?_c('songs-list-table',{attrs:{\"visAreas\":{\n        point: true,\n      },\"opts\":{\n        type: 'toplist',\n        id: _vm.toplistOpts[_vm.active - 0],\n      }}}):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"ranking_main\">\r\n    <div class=\"header\">\r\n      <!-- nav区域 -->\r\n      <div class=\"menu_wrapper\">\r\n        <el-menu\r\n          :default-active=\"active\"\r\n          class=\"el-menu-vertical-demo\"\r\n          mode=\"horizontal\"\r\n          @select=\"toggleRanking\"\r\n        >\r\n          <el-menu-item\r\n            :index=\"item.id + ''\"\r\n            :key=\"item.id\"\r\n            v-for=\"item in navData\"\r\n            >{{ item.title }}</el-menu-item\r\n          >\r\n        </el-menu>\r\n      </div>\r\n    </div>\r\n    <!-- 列表组件区域 -->\r\n    <div\r\n      class=\"content\"\r\n      v-loading=\"loading\"\r\n      element-loading-background=\"var(--loading-bg-color)\"\r\n    >\r\n      <!-- 重试组件 -->\r\n      <retry v-if=\"showRetry\" @retry=\"getData\"></retry>\r\n      <!-- 内容展示 -->\r\n      <songs-list-table\r\n        v-if=\"showContent\"\r\n        :visAreas=\"{\r\n          point: true,\r\n        }\"\r\n        :opts=\"{\r\n          type: 'toplist',\r\n          id: toplistOpts[active - 0],\r\n        }\"\r\n      ></songs-list-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SongsListTable from \"../components/SongsListTable.vue\";\r\nimport Retry from \"../components/Retry.vue\";\r\nexport default {\r\n  name: \"Ranking\",\r\n  components: {\r\n    SongsListTable,\r\n    Retry,\r\n  },\r\n  data() {\r\n    return {\r\n      active: \"0\", // nav选中项\r\n      showRetry: false,\r\n      showContent: false,\r\n      loading: false,\r\n      // 选项数据\r\n      navData: [\r\n        {\r\n          id: 0,\r\n          title: \"热歌榜\",\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"飙升榜\",\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"网络榜\", //网络热歌榜\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"说唱榜\", // 云音乐说唱榜\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"古典榜\", // 云音乐古典榜\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"热度榜\", // 实时热度榜\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"日语榜\",\r\n        },\r\n        {\r\n          id: 7,\r\n          title: \"欧美榜\",\r\n        },\r\n      ],\r\n      toplistOpts: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    // 选项切换时\r\n    toggleRanking(index) {\r\n      this.active = index;\r\n    },\r\n    async getData() {\r\n      this.showRetry = false;\r\n      this.loading = true;\r\n      try {\r\n        await this.getNavData();\r\n        this.showContent = true;\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.showRetry = true;\r\n        this.$message.error(\"获取导航数据失败！\");\r\n      }\r\n      this.loading = false;\r\n    },\r\n    // 获取导航数据\r\n    async getNavData() {\r\n      const url = \"/toplist\";\r\n      let { data } = await this.$http.get(url);\r\n      data = data.list;\r\n      this.toplistOpts.push(data.find((i) => i.name === \"热歌榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"飙升榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"网络热歌榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"云音乐说唱榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"云音乐古典榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"实时热度榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"云音乐日语榜\").id);\r\n      this.toplistOpts.push(data.find((i) => i.name === \"云音乐欧美热歌榜\").id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.ranking_main {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  .header {\r\n    height: 88px;\r\n    .menu_wrapper {\r\n      height: 63px;\r\n      background-color: var(--primar-color);\r\n      border-radius: 20px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      padding: 0 5px;\r\n      overflow: hidden;\r\n      .el-menu {\r\n        background: transparent;\r\n        height: 43px;\r\n        flex-shrink: 1;\r\n        border-color: transparent;\r\n        display: flex;\r\n\r\n        .el-menu-item {\r\n          margin: 0 5px;\r\n          height: 43px;\r\n          flex: 0 1 82px;\r\n          // width: 82px;\r\n          line-height: 40px;\r\n          border-radius: 14px;\r\n          font-weight: bold;\r\n          color: #fff;\r\n          position: relative;\r\n          text-align: center;\r\n          &::before {\r\n            content: \"\";\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            height: 1px;\r\n            width: 14px;\r\n            border-radius: 2px;\r\n            border: 2px solid var(--primar-color);\r\n            background-color: var(--primar-color);\r\n            opacity: 0;\r\n          }\r\n          &:focus {\r\n            background: transparent;\r\n          }\r\n          &:hover {\r\n            background-color: #fff;\r\n            color: var(--primar-color);\r\n            &::before {\r\n              opacity: 1;\r\n            }\r\n          }\r\n          &.is-active {\r\n            background-color: #fff;\r\n            border-color: transparent;\r\n            color: var(--primar-color);\r\n            &::before {\r\n              opacity: 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .content {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ranking.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ranking.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Ranking.vue?vue&type=template&id=fcf9cd18&scoped=true\"\nimport script from \"./Ranking.vue?vue&type=script&lang=js\"\nexport * from \"./Ranking.vue?vue&type=script&lang=js\"\nimport style0 from \"./Ranking.vue?vue&type=style&index=0&id=fcf9cd18&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fcf9cd18\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","staticClass","directives","name","rawName","value","loading","expression","attrs","showRetry","on","getData","_e","showEmpty","staticStyle","_l","songsListData","item","index","key","id","class","act","active","$event","playSpecificSong","visAreas","point","_v","_s","song_name","songName","fee","col","toggleCol","isCol","download","artist","arName","albumName","album","duration","formatTime","dt","staticRenderFns","props","type","Object","default","opts","keywords","data","infiniteDisabled","limit","offset","lastLoadCount","watch","handler","immediate","computed","mapGetters","methods","mapActions","hours","Math","floor","minutes","seconds","String","padStart","arNameFormatted","nameList","str","nameArr","map","length","join","getShowColData","getToplistData","getSearchData","$message","error","err","console","toplistId","playlistData","$http","get","params","trackIds","playlist","songsList","ids","songsListData_temp","songs","picUrl","al","ar","isPlayable","checkIsCol","settings","playSettings","ignorePreviewTracks","filter","trim","url","result","uniqueItems","filterUniqueItems","push","myCol","JSON","parse","localStorage","getItem","checkPlayable","obj","msg","handleConfirm","addToDownloadList","success","freeTrialInfo","end","time","start","isUnique","downloadList","findIndex","i","$confirm","confirmButtonText","cancelButtonText","customClass","then","catch","isChangePlayQueue","eqArr","playQueue","pushToPlaylist","selectedTrackId","updateCurrentTrack","arr","arrTemp","slice","forEach","itemA","itemB","find","some","localMyCol","splice","setItem","stringify","a","b","every","existingItems","allItems","existingItem","component","toggleRanking","navData","title","showContent","toplistOpts","components","SongsListTable","Retry","created","getNavData","list"],"sourceRoot":""}