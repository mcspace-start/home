"use strict";(self["webpackChunkfgmusic"]=self["webpackChunkfgmusic"]||[]).push([[918],{918:function(s,t,a){a.r(t),a.d(t,{default:function(){return r}});var i=function(){var s=this,t=s._self._c;return t("div",{staticClass:"main"},[t("div",{ref:"info",staticClass:"info"},[t("div",{staticClass:"info_wrap"},[t("div",{staticClass:"info_i_top"},[t("el-image",{staticClass:"logo",attrs:{src:s.playlistsData.picUrl,fit:"cover"}},[t("div",{attrs:{slot:"placeholder"},slot:"placeholder"},[t("span",[t("i",{staticClass:"el-icon-loading"})])]),t("div",{attrs:{slot:"error"},slot:"error"},[t("i",{staticClass:"el-icon-picture-outline"})])]),t("div",{staticClass:"btn",class:{isCol:s.playlistsData.isCol},on:{click:function(t){return s.toggleCol(s.playlistsData)}}},[t("i",{staticClass:"iconfont icon-tx-shizixing"}),s._v(" "+s._s(s.playlistsData.isCol?"取消收藏":"收藏歌单")+" ")])],1),t("div",{staticClass:"info_i_bottom"},[t("p",{staticClass:"name"},[s._v("《"+s._s(s.playlistsData.name)+"》")]),t("p",{staticClass:"description"},[s._v(s._s(s.playlistsData.description))])])])]),t("div",{staticClass:"list"},[t("div",{staticClass:"head"},[t("span",[s._v("音乐列表")]),t("div",{staticClass:"playListBtn",on:{click:function(t){return t.stopPropagation(),s.playAlSongs.apply(null,arguments)}}},[t("i",{staticClass:"el-icon-caret-right"})])]),t("div",{staticClass:"list_content"},[t("songs-list",{ref:"songsList",attrs:{opts:{type:s.playlistsData.type,id:s.playlistsData.id}}})],1)])])},l=[],e=(a(4114),a(8992),a(7550),a(4334)),o={name:"PlaylistDetailPage",components:{songsList:e.A},data(){return{loading:!1,playlistsData:{id:0,name:"",picUrl:"",songs:[],description:"",isCol:!1,type:""}}},created(){this.getData()},methods:{checkIsCol(s){let t=localStorage.getItem("myCol");return!!t&&(t=JSON.parse(t),!!t.playlists&&t.playlists.some((t=>t.id===s.id)))},toggleCol(s){if(!this.playlistsData.id)return;let t=JSON.parse(localStorage.getItem("myCol")||"{}");t.playlists||(t.playlists=[]);const a=t.playlists.findIndex((t=>t.id==s.id));if(s.isCol)t.playlists.splice(a,1),this.$message.success("取消收藏成功！"),s.isCol=!1;else{const a={...s};a.songs=[],t.playlists.push(a),this.$message.success("添加收藏成功！"),s.isCol=!0}localStorage.setItem("myCol",JSON.stringify(t))},playAlSongs(){this.$refs.songsList&&this.$refs.songsList.playEntirePlaylist()},async getData(){const s=this.$route.query;this.playlistsData.name=s.name?s.name:"####",this.playlistsData.id=s.id,this.playlistsData.picUrl=s.picUrl?s.picUrl:"";try{"albums"==this.$route.query.type?(this.playlistsData.type="alSongs",await this.getAlbumsData()):"playlist"==this.$route.query.type&&(this.playlistsData.type="plSongs",await this.getPlaylistData())}catch(t){console.error(t),this.$message.error("获取歌单数据失败！")}},async getPlaylistData(){if(!this.playlistsData.id)return;const s="/playlist/detail",t=this.playlistsData.id;let{data:a}=await this.$http.get(s,{params:{id:t}});this.playlistsData.description=a.playlist.description,this.playlistsData.isCol=this.checkIsCol(this.playlistsData)},async getAlbumsData(){if(!this.playlistsData.id)return;const s="/album",t=this.playlistsData.id;let{data:a}=await this.$http.get(s,{params:{id:t}});this.playlistsData.description=a.album.description,this.playlistsData.isCol=this.checkIsCol(this.playlistsData)}}},n=o,c=a(1656),p=(0,c.A)(n,i,l,!1,null,"0fc7c03e",null),r=p.exports}}]);
//# sourceMappingURL=918.3818ccb3.js.map