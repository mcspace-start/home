{"version":3,"file":"js/163.b3d72186.js","mappings":"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","sources":["webpack://fgmusic/./src/views/Collection.vue","webpack://fgmusic/src/views/Collection.vue","webpack://fgmusic/./src/views/Collection.vue?78aa","webpack://fgmusic/./src/views/Collection.vue?fa78","webpack://fgmusic/./src/components/SongsListTable.vue","webpack://fgmusic/src/components/SongsListTable.vue","webpack://fgmusic/./src/components/SongsListTable.vue?9f4e","webpack://fgmusic/./src/components/SongsListTable.vue?1449"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col_main\"},[_c('div',{staticClass:\"left\"},[_c('div',{staticClass:\"head\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"收藏\"+_vm._s(_vm.compLabelMap[_vm.activeComp]))]),_c('div',{staticClass:\"buttons\"},[_c('div',{staticClass:\"btn\",on:{\"click\":_vm.handleClear}},[_vm._v(\" 清空\"+_vm._s(_vm.compLabelMap[_vm.activeComp])+\" \")])])]),_c('div',{staticClass:\"content\"},[_c(_vm.activeComp,{key:_vm.key,tag:\"component\",attrs:{\"opts\":{\n          type: 'col',\n        },\"visAreas\":_vm.visAreas}})],1)]),_c('div',{staticClass:\"right\"},[_c('div',{staticClass:\"menu_wrapper\"},[_c('el-menu',{attrs:{\"default-active\":\"SongsListTable\"},on:{\"select\":_vm.handleSelect}},[_c('el-menu-item',{attrs:{\"index\":\"SongsListTable\"}},[_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"收藏歌曲\")])]),_c('el-menu-item',{attrs:{\"index\":\"ArtistsList\"}},[_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"收藏歌手\")])]),_c('el-menu-item',{attrs:{\"index\":\"Playlist\"}},[_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"收藏歌单\")])])],1)],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"col_main\">\r\n    <!-- 左侧 -->\r\n    <div class=\"left\">\r\n      <div class=\"head\">\r\n        <!-- 标题 -->\r\n        <div class=\"title\">收藏{{ compLabelMap[activeComp] }}</div>\r\n        <!-- 按钮 -->\r\n        <div class=\"buttons\">\r\n          <div class=\"btn\" @click=\"handleClear\">\r\n            清空{{ compLabelMap[activeComp] }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 组件渲染 -->\r\n      <div class=\"content\">\r\n        <component\r\n          :is=\"activeComp\"\r\n          :opts=\"{\r\n            type: 'col',\r\n          }\"\r\n          :visAreas=\"visAreas\"\r\n          :key=\"key\"\r\n        >\r\n        </component>\r\n      </div>\r\n    </div>\r\n    <!-- 右侧菜单 -->\r\n    <div class=\"right\">\r\n      <div class=\"menu_wrapper\">\r\n        <el-menu default-active=\"SongsListTable\" @select=\"handleSelect\">\r\n          <el-menu-item index=\"SongsListTable\">\r\n            <span slot=\"title\">收藏歌曲</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"ArtistsList\">\r\n            <span slot=\"title\">收藏歌手</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"Playlist\">\r\n            <span slot=\"title\">收藏歌单</span>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SongsListTable from \"../components/SongsListTable.vue\";\r\nimport ArtistsList from \"../components/ArtistsListPage.vue\";\r\nimport Playlist from \"../components/PlaylistPage.vue\";\r\nexport default {\r\n  name: \"Collection\",\r\n  components: { SongsListTable, ArtistsList, Playlist },\r\n  data() {\r\n    return {\r\n      // 隐藏配置项\r\n      visAreas: {\r\n        duration: true, // 默认为sonsListTable\r\n      },\r\n      activeComp: \"SongsListTable\",\r\n      key: 0, // 用于刷新组件渲染数据\r\n      compLabelMap: {\r\n        SongsListTable: \"歌曲\",\r\n        ArtistsList: \"歌手\",\r\n        Playlist: \"歌单\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // nav切换时\r\n    handleSelect(index) {\r\n      this.visAreas = {};\r\n      // 设置组件内隐藏项\r\n      switch (index) {\r\n        case \"SongsListTable\":\r\n          this.visAreas = {\r\n            duration: true,\r\n          };\r\n          break;\r\n        case \"ArtistsList\":\r\n          this.visAreas = {\r\n            head: true,\r\n          };\r\n          break;\r\n        case \"Playlist\":\r\n          this.visAreas = {\r\n            head: true,\r\n            tags: true,\r\n            max: true,\r\n          };\r\n          break;\r\n      }\r\n      this.activeComp = index;\r\n    },\r\n    // 清空按钮事件\r\n    handleClear() {\r\n      switch (this.activeComp) {\r\n        case \"SongsListTable\":\r\n          this.clearColSongs();\r\n          break;\r\n        case \"ArtistsList\":\r\n          this.clearColArtists();\r\n          break;\r\n        case \"Playlist\":\r\n          this.clearPlaylists();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    // 清空收藏歌曲\r\n    clearColSongs() {\r\n      const myCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      // 如果没有收藏的歌曲，直接返回\r\n      if (!myCol.songs || myCol.songs.length === 0) return;\r\n\r\n      this.$confirm(\"确定清空收藏歌曲吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n        customClass: \"messageBox\",\r\n      })\r\n        .then(() => {\r\n          this.$message.info(\"收藏歌曲已清空\");\r\n          myCol.songs = [];\r\n          localStorage.setItem(\"myCol\", JSON.stringify(myCol));\r\n          this.key++;\r\n          if (this.key > 1000) this.key = 0;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    // 清空收藏歌手\r\n    clearColArtists() {\r\n      const myCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      if (!myCol.songs || myCol.artists.length === 0) return;\r\n      this.$confirm(\"确定清空收藏歌手吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        customClass: \"messageBox\",\r\n\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$message.info(\"收藏歌手已清空\");\r\n          myCol.artists = [];\r\n          localStorage.setItem(\"myCol\", JSON.stringify(myCol));\r\n          this.key++;\r\n          if (this.key > 1000) this.key = 0;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    // 清空收藏歌单\r\n    clearPlaylists() {\r\n      const myCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      if (myCol.playlists.length == 0) return;\r\n      this.$confirm(\"确定清空收藏歌单吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n        customClass: \"messageBox\",\r\n      })\r\n        .then(() => {\r\n          this.$message.info(\"收藏歌单已清空\");\r\n\r\n          myCol.playlists = [];\r\n          localStorage.setItem(\"myCol\", JSON.stringify(myCol));\r\n          // 刷新组件渲染\r\n          this.key++;\r\n          if (this.key > 1000) this.key = 0;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.col_main {\r\n  display: flex;\r\n  height: 100%;\r\n  .left {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .head {\r\n      height: 48px;\r\n      flex: 0 0 48px;\r\n      margin-bottom: 18px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 0 28px 0 10px;\r\n\r\n      .title {\r\n        flex: 1;\r\n        font-size: 28px;\r\n        line-height: 48px;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .buttons {\r\n        flex: 1;\r\n        width: 50px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n\r\n        .btn {\r\n          transition: all var(--transition-duration);\r\n          margin-left: 16px;\r\n          display: inline-block;\r\n          height: 34px;\r\n          padding: 0 24px;\r\n          cursor: pointer;\r\n          background-color: var(--button-bg-color);\r\n          vertical-align: top;\r\n          text-align: center;\r\n          line-height: 34px;\r\n          font-size: 14px;\r\n          color: var(--primary-text-color);\r\n          box-shadow: 0 16px 14px var(--primary-shadow-color);\r\n          letter-spacing: 2px;\r\n          border-radius: 10px;\r\n\r\n          &:hover {\r\n            color: #fff;\r\n            background-color: var(--primar-color);\r\n            box-shadow: 0 16px 14px var(--secondary-shadow-color);\r\n            transform: translateY(-4px);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .content {\r\n      height: 100%;\r\n    }\r\n  }\r\n  .right {\r\n    margin-left: 25px;\r\n    width: 156px;\r\n    flex: 0 0 156px;\r\n    .menu_wrapper {\r\n      background: var(--primar-color);\r\n      padding: 45px 30px 35px 30px;\r\n      border-radius: 22px;\r\n      .el-menu {\r\n        background-color: transparent;\r\n        border: none;\r\n      }\r\n      .el-menu-item {\r\n        height: 43px;\r\n        line-height: 40px;\r\n        border-radius: 16px;\r\n        margin-bottom: 10px;\r\n        transition: all var(--transition-duration);\r\n        color: #fff;\r\n        font-weight: bold;\r\n        font-size: 14px;\r\n        text-align: center;\r\n        position: relative;\r\n\r\n        &::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          bottom: 0;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          height: 1px;\r\n          width: 14px;\r\n          border-radius: 2px;\r\n          border: 2px solid var(--primar-color);\r\n          background-color: var(--primar-color);\r\n          opacity: 0;\r\n        }\r\n        &:focus {\r\n          background: transparent;\r\n        }\r\n        &:hover {\r\n          background-color: #fff;\r\n          color: var(--primar-color);\r\n          &::before {\r\n            opacity: 1;\r\n          }\r\n        }\r\n        &:active {\r\n          transform: scale(1.1);\r\n        }\r\n        &.is-active {\r\n          background-color: #fff;\r\n          color: var(--primar-color);\r\n          &::before {\r\n            opacity: 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./Collection.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./Collection.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Collection.vue?vue&type=template&id=06dd5c46&scoped=true\"\nimport script from \"./Collection.vue?vue&type=script&lang=js\"\nexport * from \"./Collection.vue?vue&type=script&lang=js\"\nimport style0 from \"./Collection.vue?vue&type=style&index=0&id=06dd5c46&prod&scoped=true&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06dd5c46\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"songsListTableMain\",staticClass:\"main_wrap\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"content\",staticClass:\"content\",attrs:{\"element-loading-background\":\"var(--loading-bg-color)\"}},[(_vm.showRetry)?_c('retry',{on:{\"retry\":_vm.getData}}):_vm._e(),(!_vm.showRetry && !_vm.showEmpty)?_c('el-scrollbar',{staticStyle:{\"height\":\"100%\"},attrs:{\"wrap-style\":\"overflow-x: hidden;\"}},[_c('div',{directives:[{name:\"infinite-scroll\",rawName:\"v-infinite-scroll\",value:(_vm.getData),expression:\"getData\"}],staticClass:\"content_i\",attrs:{\"infinite-scroll-immediate\":\"false\",\"infinite-scroll-disabled\":\"infiniteDisabled\"}},_vm._l((_vm.songsListData),function(item,index){return _c('div',{key:item.id,staticClass:\"table_item\",class:{ act: item.id == _vm.active },on:{\"click\":function($event){_vm.active = item.id},\"dblclick\":function($event){return _vm.playSpecificSong(item)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.point),expression:\"!visAreas.point\"}],staticClass:\"point\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.index),expression:\"!visAreas.index\"}],staticClass:\"index\"},[_vm._v(_vm._s(index + 1))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.song_name),expression:\"!visAreas.song_name\"}],staticClass:\"song_name\",attrs:{\"title\":item.songName}},[_vm._v(\" \"+_vm._s(item.songName)+\" \")]),_c('div',{staticClass:\"version\"},[(item.fee == 1)?_c('span',[_vm._v(\" 试听 \")]):_vm._e()]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.col),expression:\"!visAreas.col\"}],staticClass:\"col\",on:{\"click\":function($event){return _vm.toggleCol(item)}}},[_c('div',{staticClass:\"i_wrapper\"},[_c('i',{staticClass:\"iconfont\",class:{\n                  'icon-xihuan1': !item.isCol,\n                  'icon-xihuan2': item.isCol,\n                }})])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.download),expression:\"!visAreas.download\"}],staticClass:\"download\",on:{\"click\":function($event){return _vm.download(item)}}},[_c('div',{staticClass:\"i_wrapper\"},[_c('i',{staticClass:\"iconfont icon-arrow-down-line\"})])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.artist),expression:\"!visAreas.artist\"}],staticClass:\"artist\",attrs:{\"title\":item.arName}},[_vm._v(\" \"+_vm._s(item.arName)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.albumName),expression:\"!visAreas.albumName\"}],staticClass:\"albumName\",attrs:{\"title\":item.albumName}},[_vm._v(\" \"+_vm._s(item.album)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.visAreas.duration),expression:\"!visAreas.duration\"}],staticClass:\"duration\"},[_vm._v(\" \"+_vm._s(_vm.formatTime(item.dt))+\" \")])])}),0)]):_vm._e(),(_vm.showEmpty && !_vm.showRetry && !_vm.loading)?_c('div',{staticClass:\"empty\"},[_c('div',{staticClass:\"empty_i\"},[_vm._v(\"没有数据\")])]):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"main_wrap\" ref=\"songsListTableMain\">\r\n    <div\r\n      class=\"content\"\r\n      ref=\"content\"\r\n      v-loading=\"loading\"\r\n      element-loading-background=\"var(--loading-bg-color)\"\r\n    >\r\n      <!-- 重试 -->\r\n      <retry @retry=\"getData\" v-if=\"showRetry\"></retry>\r\n      <!-- 内容 -->\r\n      <el-scrollbar\r\n        v-if=\"!showRetry && !showEmpty\"\r\n        style=\"height: 100%\"\r\n        wrap-style=\"overflow-x: hidden;\"\r\n      >\r\n        <div\r\n          class=\"content_i\"\r\n          infinite-scroll-immediate=\"false\"\r\n          v-infinite-scroll=\"getData\"\r\n          infinite-scroll-disabled=\"infiniteDisabled\"\r\n        >\r\n          <div\r\n            class=\"table_item\"\r\n            @click=\"active = item.id\"\r\n            v-for=\"(item, index) in songsListData\"\r\n            @dblclick=\"playSpecificSong(item)\"\r\n            :key=\"item.id\"\r\n            :class=\"{ act: item.id == active }\"\r\n          >\r\n            <div class=\"point\" v-show=\"!visAreas.point\"></div>\r\n            <div class=\"index\" v-show=\"!visAreas.index\">{{ index + 1 }}</div>\r\n            <div\r\n              class=\"song_name\"\r\n              :title=\"item.songName\"\r\n              v-show=\"!visAreas.song_name\"\r\n            >\r\n              {{ item.songName }}\r\n            </div>\r\n            <div class=\"version\">\r\n              <span v-if=\"item.fee == 1\"> 试听 </span>\r\n            </div>\r\n            <div class=\"col\" v-show=\"!visAreas.col\" @click=\"toggleCol(item)\">\r\n              <div class=\"i_wrapper\">\r\n                <i\r\n                  class=\"iconfont\"\r\n                  :class=\"{\r\n                    'icon-xihuan1': !item.isCol,\r\n                    'icon-xihuan2': item.isCol,\r\n                  }\"\r\n                ></i>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"download\"\r\n              v-show=\"!visAreas.download\"\r\n              @click=\"download(item)\"\r\n            >\r\n              <div class=\"i_wrapper\">\r\n                <i class=\"iconfont icon-arrow-down-line\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"artist\" v-show=\"!visAreas.artist\" :title=\"item.arName\">\r\n              {{ item.arName }}\r\n            </div>\r\n            <div\r\n              class=\"albumName\"\r\n              v-show=\"!visAreas.albumName\"\r\n              :title=\"item.albumName\"\r\n            >\r\n              {{ item.album }}\r\n            </div>\r\n            <div class=\"duration\" v-show=\"!visAreas.duration\">\r\n              {{ formatTime(item.dt) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-scrollbar>\r\n      <!-- 无数据 -->\r\n      <div class=\"empty\" v-if=\"showEmpty && !showRetry && !loading\">\r\n        <div class=\"empty_i\">没有数据</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"SongsListTable\",\r\n  props: {\r\n    // 接受隐藏项\r\n    visAreas: {\r\n      type: Object,\r\n      default: () => ({\r\n        // point: false,\r\n        // index: false,\r\n        // song_name: false,\r\n        // col: false,\r\n        // download: false,\r\n        // artist: false,\r\n        // albumName: false,\r\n        // duration: false,\r\n      }),\r\n    },\r\n    // 接受参数项\r\n    opts: {\r\n      type: Object,\r\n      default: () => ({\r\n        id: 0,\r\n        type: \"\",\r\n        keywords: \"\",\r\n        // type:toplist || col || search\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      songsListData: [], // 歌曲内容\r\n      active: 0, //选中高亮\r\n      loading: false,\r\n      showRetry: false,\r\n      showEmpty: false,\r\n      infiniteDisabled: false, //无限滚动\r\n      limit: 30,\r\n      offset: 0,\r\n      keywords: \"\",\r\n      lastLoadCount: 0, // 用于跳过已经请求过的资源\r\n    };\r\n  },\r\n  watch: {\r\n    opts: {\r\n      handler(value) {\r\n        this.songsListData = [];\r\n        this.getData();\r\n        this.keywords = value.keywords;\r\n        this.lastLoadCount = 0;\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"playQueue\", \"downloadList\", \"settings\", \"selectedTrackId\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      \"pushToPlaylist\",\r\n      \"updateCurrentTrack\",\r\n      \"addToDownloadList\",\r\n    ]),\r\n    // 格式化时长 HH:mm:ss\r\n    formatTime(duration) {\r\n      const hours = Math.floor(duration / 3600000);\r\n      const minutes = Math.floor((duration % 3600000) / 60000);\r\n      const seconds = Math.floor((duration % 60000) / 1000);\r\n      return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(\r\n        2,\r\n        \"0\"\r\n      )}:${String(seconds).padStart(2, \"0\")}`;\r\n    },\r\n    // 拼接歌手名称\r\n    arNameFormatted(nameList) {\r\n      let str = \"\";\r\n      const nameArr = nameList.map((item) => {\r\n        return item.name;\r\n      });\r\n      if (nameArr.length > 3) {\r\n        str = \"群星\";\r\n      } else {\r\n        str = nameArr.join(\" & \");\r\n      }\r\n      return str;\r\n    },\r\n    // 获取数据\r\n    async getData() {\r\n      this.loading = true;\r\n      this.showEmpty = false;\r\n      this.showRetry = false;\r\n\r\n      const opts = this.opts;\r\n      try {\r\n        switch (opts.type) {\r\n          case \"col\":\r\n            this.infiniteDisabled = true;\r\n            this.getShowColData();\r\n            break;\r\n          case \"toplist\":\r\n            this.infiniteDisabled = true;\r\n            await this.getToplistData(opts.id);\r\n            break;\r\n          case \"search\":\r\n            if (opts.keywords) {\r\n              await this.getSearchData(opts.keywords);\r\n            }\r\n            break;\r\n          default: {\r\n            this.$message.error(\"传入参数错误！\");\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.showRetry = true;\r\n        this.$message.error(\"获取榜单数据失败！\");\r\n      }\r\n      this.loading = false;\r\n      if (!this.songsListData.length) this.showEmpty = true;\r\n    },\r\n    // 发起请求\r\n    async getToplistData(toplistId) {\r\n      if (toplistId == 0) return;\r\n      console.log(\"获取排行榜数据\");\r\n      // 19723756\r\n      // 此处获取歌单详情\r\n      const { data: playlistData } = await this.$http.get(\"/playlist/detail\", {\r\n        params: {\r\n          id: toplistId,\r\n        },\r\n      });\r\n      // 拼接 id\r\n      const trackIds = playlistData.playlist.trackIds.map((item) => item.id);\r\n      // 获取音乐详情\r\n      const { data: songsList } = await this.$http.get(\"song/detail\", {\r\n        params: {\r\n          ids: trackIds.join(\",\"),\r\n        },\r\n      });\r\n      // 格式化数据并添加至songsListData\r\n      let songsListData_temp = songsList.songs.map((item) => {\r\n        return {\r\n          id: item.id,\r\n          picUrl: item.al.picUrl,\r\n          songName: item.name,\r\n          arName: this.arNameFormatted(item.ar),\r\n          album: item.al.name,\r\n          dt: item.dt,\r\n          isPlayable: true,\r\n          isCol: this.checkIsCol(item), // 判断本地存储是否存在\r\n          fee: item.fee,\r\n        };\r\n      });\r\n      // 忽略试听歌曲\r\n      if (this.settings?.playSettings?.ignorePreviewTracks) {\r\n        songsListData_temp = songsListData_temp.filter(\r\n          (item) => item.fee !== 1\r\n        );\r\n      }\r\n      this.songsListData = songsListData_temp;\r\n    },\r\n    // 获取搜索数据\r\n    async getSearchData(keywords) {\r\n      if (keywords.trim() == \"\") return;\r\n      console.log(\"搜索歌曲\");\r\n      if (this.keywords !== keywords) {\r\n        this.songsListData = [];\r\n        this.offset = 0;\r\n      }\r\n      const url = \"/cloudsearch\";\r\n      const params = {\r\n        limit: this.limit,\r\n        offset: this.offset,\r\n        type: 1, // 1 单曲 10 专辑 100 歌手 1000 歌单 1002用户 1004 mv 1006 歌词 1014视频 1018综合 2000 声音\r\n        keywords: keywords,\r\n      };\r\n      let { data } = await this.$http.get(url, { params });\r\n      data = data.result.songs || [];\r\n      // 格式化数据\r\n      let songsListData_temp = data.map((item) => {\r\n        return {\r\n          id: item.id,\r\n          picUrl: item.al.picUrl,\r\n          songName: item.name,\r\n          arName: this.arNameFormatted(item.ar),\r\n          album: item.al.name,\r\n          dt: item.dt,\r\n          isPlayable: true, // 默认播放源正常\r\n          isCol: this.checkIsCol(item), // 判断是否为喜欢\r\n          fee: item.fee,\r\n        };\r\n      });\r\n      // 排除重复值\r\n      let uniqueItems = this.filterUniqueItems(\r\n        this.songsListData,\r\n        songsListData_temp\r\n      );\r\n      // 关闭无限滚动\r\n      if (!uniqueItems.length) {\r\n        this.infiniteDisabled = true;\r\n      }\r\n      this.offset += this.limit;\r\n      // 忽略试听歌曲\r\n      if (this.settings?.playSettings?.ignorePreviewTracks) {\r\n        // 去除试听歌曲\r\n        uniqueItems = uniqueItems.filter((item) => item.fee !== 1);\r\n        this.songsListData.push(...uniqueItems);\r\n        // 去除试听歌曲后 uniqueItems 数组为空且 infiniteDisabled 为 false\r\n        if (!uniqueItems.length && !this.infiniteDisabled) {\r\n          this.getData();\r\n        }\r\n      } else {\r\n        this.songsListData.push(...uniqueItems);\r\n      }\r\n    },\r\n    // 展示收藏数据\r\n    getShowColData() {\r\n      console.log(\"展示收藏数据\");\r\n      const myCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      const songs = myCol.songs || [];\r\n      this.songsListData = songs;\r\n    },\r\n    // 下载\r\n    async download(item) {\r\n      console.log(\"尝试下载\");\r\n      // 获取 url\r\n      await this.checkPlayable([item]);\r\n      if (!item.url) return this.$message.error(\"URL为空\");\r\n      // 传入参数 用于添加下载列表\r\n      const obj = {\r\n        name: item.songName,\r\n        id: item.id,\r\n        url: item.url,\r\n      };\r\n      // confirm 信息\r\n      let msg = \"是否下载？\"; // 提示信息\r\n      // 执行方法\r\n      let handleConfirm = () => {\r\n        this.addToDownloadList(obj);\r\n        this.$message.success(\"添加至下载列表！\");\r\n      };\r\n      // 是否为试听版\r\n      if (item.freeTrialInfo.end) {\r\n        const time = item.freeTrialInfo.end - item.freeTrialInfo.start;\r\n        msg = \"该歌曲为试听版，是否继续下载？时长\" + time + \"秒\";\r\n      }\r\n      // 判断是否存在下载列表\r\n      const isUnique = this.downloadList.findIndex((i) => i.id == item.id);\r\n      if (isUnique !== -1) {\r\n        msg = \"下载列表已经存在，是否重复下载\";\r\n      }\r\n      // 弹出提示框\r\n      this.$confirm(msg, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n        customClass: \"messageBox\",\r\n      })\r\n        .then(handleConfirm)\r\n        .catch(() => {});\r\n    },\r\n    // 播放指定歌曲\r\n    async playSpecificSong(item) {\r\n      try {\r\n        await this.checkPlayable(this.songsListData);\r\n      } catch (err) {\r\n        return this.$message.error(\"获取歌曲详情失败！\");\r\n      }\r\n      if (!item.isPlayable) return this.$message.error(\"无法播放！\");\r\n      // 判断是否需要更新播放列表\r\n      const isChangePlayQueue = this.eqArr(this.songsListData, this.playQueue);\r\n      if (!isChangePlayQueue) {\r\n        this.pushToPlaylist([...this.songsListData]);\r\n      }\r\n      // console.log(` 当前播放${item.id},正在播放${this.selectedTrackId}`);\r\n      // 是否重新播放当前这首\r\n      if (item.id == this.selectedTrackId) {\r\n        this.updateCurrentTrack(-2); // 传入-2\r\n      } else {\r\n        // 写入播放索引\r\n        this.updateCurrentTrack(item.id);\r\n      }\r\n    },\r\n    // 查询播放源 会对原数组修改\r\n    async checkPlayable(arr) {\r\n      console.log(\"查询播放源\");\r\n      // 跳过之前\r\n      let arrTemp = [];\r\n      // 无需通过网络请求片段不会设置 lastLoadCount\r\n      if (this.lastLoadCount) {\r\n        // 只需要最后添加的片段\r\n        arrTemp = arr.slice(this.lastLoadCount);\r\n        arr = arrTemp;\r\n      }\r\n      const ids = arr.map((i) => i.id).join(\",\");\r\n      const url = \"/song/url\";\r\n      let { data } = await this.$http.get(url, {\r\n        params: {\r\n          id: ids,\r\n        },\r\n      });\r\n      data = data.data;\r\n      arr.forEach((itemA) => {\r\n        const itemB = data.find((itemB) => itemA.id == itemB.id);\r\n        // 对原数组进行修改\r\n        itemA.url = itemB.url;\r\n        itemA.freeTrialInfo = itemB.freeTrialInfo || {}; //试听信息\r\n        if (!itemA.url) itemA.isPlayable = false;\r\n      });\r\n      // 保存当前已加载的下标\r\n      this.lastLoadCount += arr.length;\r\n    },\r\n    // 判断是否为本地收藏\r\n    checkIsCol(item) {\r\n      let myCol = localStorage.getItem(\"myCol\");\r\n      if (!myCol) return false;\r\n\r\n      myCol = JSON.parse(myCol);\r\n      return myCol.songs ? myCol.songs.some((i) => i.id === item.id) : false;\r\n    },\r\n    // 收藏歌曲\r\n    toggleCol(item) {\r\n      // songs\r\n      console.log(\"切换喜欢\");\r\n      let localMyCol = JSON.parse(localStorage.getItem(\"myCol\") || \"{}\");\r\n      if (!localMyCol.songs) {\r\n        localMyCol.songs = [];\r\n      }\r\n      const index = localMyCol.songs.findIndex((i) => i.id == item.id);\r\n      if (item.isCol) {\r\n        localMyCol.songs.splice(index, 1);\r\n        item.isCol = false;\r\n        this.$message.success(\"取消收藏成功！\");\r\n      } else {\r\n        localMyCol.songs.push(item);\r\n        item.isCol = true;\r\n        this.$message.success(\"添加收藏成功！\");\r\n      }\r\n      localStorage.setItem(\"myCol\", JSON.stringify(localMyCol));\r\n    },\r\n    // 判断数组是否相同 浅层\r\n    eqArr(a, b) {\r\n      return a.length === b.length && a.every((item, i) => item.id === b[i].id);\r\n    },\r\n    // 过滤重复项\r\n    filterUniqueItems(existingItems, allItems) {\r\n      // 从 allItems 中筛选出那些在 existingItems 中不存在的项\r\n      const uniqueItems = allItems.filter((item) => {\r\n        return !existingItems.some(\r\n          (existingItem) => existingItem.id === item.id\r\n        );\r\n      });\r\n      return uniqueItems;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.main_wrap {\r\n  height: 100%;\r\n  position: relative;\r\n  .content {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .table_item {\r\n      height: 44px;\r\n      margin-bottom: 7px;\r\n      display: flex;\r\n      font-size: 14px;\r\n      align-items: center;\r\n      padding-left: 16px;\r\n      font-weight: bold;\r\n      color: var(--secondary-text-color);\r\n      border-radius: 12px;\r\n      & > div {\r\n        flex: 1;\r\n        margin-right: 5px;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n      }\r\n      &:hover {\r\n        background: var(--secondary-bg-color);\r\n        color: var(--text-hover-color);\r\n      }\r\n      &.act {\r\n        background: var(--secondary-bg-color);\r\n        color: var(--primary-text-color);\r\n      }\r\n      .point {\r\n        flex: 0 0 10px;\r\n        margin-right: 16px;\r\n        width: 10px;\r\n        height: 10px;\r\n        border-radius: 50%;\r\n        background-color: var(--primar-color);\r\n      }\r\n      .index {\r\n        width: 46px;\r\n        flex: 0 0 46px;\r\n      }\r\n      // 歌曲名称\r\n      .song_name {\r\n        flex: 1;\r\n      }\r\n      .version {\r\n        flex: 0 0 50px;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        & > span {\r\n          color: #fe7360;\r\n          border: 1px solid #fe7360;\r\n          box-sizing: border-box;\r\n          font-size: 10px;\r\n          padding: 2px;\r\n        }\r\n      }\r\n      // 下载和喜欢\r\n      .col,\r\n      .download {\r\n        cursor: pointer;\r\n        width: 34px;\r\n        flex: 0 0 34px;\r\n        font-weight: normal;\r\n        margin-right: 0;\r\n        .iconfont {\r\n          font-size: 12px;\r\n        }\r\n        .icon-xihuan2 {\r\n          color: #e01e1e;\r\n        }\r\n        .i_wrapper {\r\n          width: 25px;\r\n          height: 25px;\r\n          text-align: center;\r\n          line-height: 25px;\r\n          border-radius: 8px;\r\n          transition: background var(--transition-duration);\r\n          &:hover {\r\n            background: var(--primary-button-hover-color);\r\n          }\r\n        }\r\n      }\r\n      // 作者\r\n      .artist {\r\n        width: 220px;\r\n      }\r\n      // 专辑\r\n      .albumName {\r\n        width: 340px;\r\n      }\r\n      // 时长\r\n      .duration {\r\n        width: 110px;\r\n      }\r\n    }\r\n    // 无数据\r\n    .empty {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      & > .empty_i {\r\n        width: 134px;\r\n        height: 42px;\r\n        background-color: var(--nav-bg-color);\r\n        color: var(--secondary-text-color);\r\n        border-radius: 12px;\r\n        line-height: 42px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsListTable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsListTable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SongsListTable.vue?vue&type=template&id=4a2fc9ff&scoped=true\"\nimport script from \"./SongsListTable.vue?vue&type=script&lang=js\"\nexport * from \"./SongsListTable.vue?vue&type=script&lang=js\"\nimport style0 from \"./SongsListTable.vue?vue&type=style&index=0&id=4a2fc9ff&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a2fc9ff\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","compLabelMap","activeComp","on","handleClear","key","tag","attrs","type","visAreas","handleSelect","slot","staticRenderFns","name","components","SongsListTable","ArtistsList","Playlist","data","duration","methods","index","head","tags","max","clearColSongs","clearColArtists","clearPlaylists","myCol","JSON","parse","localStorage","getItem","songs","length","$confirm","confirmButtonText","cancelButtonText","customClass","then","$message","info","setItem","stringify","catch","artists","playlists","component","ref","directives","rawName","value","loading","expression","showRetry","getData","_e","showEmpty","staticStyle","_l","songsListData","item","id","class","act","active","$event","playSpecificSong","point","song_name","songName","fee","col","toggleCol","isCol","download","artist","arName","albumName","album","formatTime","dt","props","Object","default","opts","keywords","infiniteDisabled","limit","offset","lastLoadCount","watch","handler","immediate","computed","mapGetters","mapActions","hours","Math","floor","minutes","seconds","String","padStart","arNameFormatted","nameList","str","nameArr","map","join","getShowColData","getToplistData","getSearchData","error","err","console","toplistId","playlistData","$http","get","params","trackIds","playlist","songsList","ids","songsListData_temp","picUrl","al","ar","isPlayable","checkIsCol","settings","playSettings","ignorePreviewTracks","filter","trim","url","result","uniqueItems","filterUniqueItems","push","checkPlayable","obj","msg","handleConfirm","addToDownloadList","success","freeTrialInfo","end","time","start","isUnique","downloadList","findIndex","i","isChangePlayQueue","eqArr","playQueue","pushToPlaylist","selectedTrackId","updateCurrentTrack","arr","arrTemp","slice","forEach","itemA","itemB","find","some","localMyCol","splice","a","b","every","existingItems","allItems","existingItem"],"sourceRoot":""}